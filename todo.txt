- ability to run reflected program in "docmode", that is, running special Reflector-generated methods to generate its own 
documentation pages based on its own criteria
	- usecase?


* Storing file timestamps in sqlite database instead of in mirror file
* Artificial methods for vector/list/map-like types, with the ability to make them readonly
* Better customization
* Option overrides as a command-line argument
* Support for base types for Enums
* Support for Non-integer enumerators for Enums
* Extensibility via scripting or plugins
* Library form
* Split into three parts: the parser, the builder, and the CLI tool
  * The parser will parse headers and output a JSON file (or, in library form, C++ structures)
  * The builder (based on a plugin architecture) will take the parsed data and actually output mirror files, and potentially other files (e.g. documentation)
  * The CLI tool will use the above to do what `reflector` does now
* Add options to disable the generation of `ReflectionData` objects, and to create `constexpr` functions instead